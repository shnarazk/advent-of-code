Solve ⇐ {env‿part 𝕊 data :
  util ← •Import "/util.bqn"∾˜"." env.Var⌾⋈ "BQN_LIB"
  "token" util.Debug nodes ← ∧⍷∾⥊adj ← ⍉≍ ⌽¨⊸∾"-"⊸util.Tokenize¨data
  start‿end ← -nodes⊐"start"‿"end"
  bignodes ← +´'Z'⊸≥∘⊑¨nodes
  map ← bignodes⊸≤◶⟨⊢,-⟩¨∘∧¨1⊸⊑¨¨⊑¨⊸⊔nodes⊸⊐¨adj
  count ← 0
  {
    1=part ?
    ∾∘({end≢⊑𝕩 ? ∾⟜𝕩˜¨0⊸>◶⟨1,¬∘⊑∊⟜𝕩˜⟩¨⊸/map⊑˜|⊑𝕩 ; count 1⊸+ ↩ ⋄ ⟨⟩}¨)•_while_(⟨⟩⊸≢)⋈⋈start ;
    ∾∘({
      (start≡⊑𝕩)∧1<≠𝕩 ? ⟨⟩ ;
      end≡⊑𝕩 ? count 1⊸+ ↩ ⋄ ⟨⟩ ;
      ∾⟜𝕩˜¨0⊸>◶⟨1,((1≥(+´1⊸=))∧(∧´1⊸≥))∘⊒·0⊸>⊸/∾⟜𝕩⟩¨⊸/map⊑˜|⊑𝕩
    }¨)•_while_(⟨⟩⊸≢)⋈⋈start
  }
  count
}
